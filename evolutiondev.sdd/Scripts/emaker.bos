#define TA        // This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, wheel, door1, door2, top, sfxpoint1;

static-var  statechg_DesiredState, statechg_StateChanging, maeksmoke;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
   while( get BUILD_PERCENT_LEFT )
   {
      sleep 400;
   }
   while( TRUE )
   {
      healthpercent = get HEALTH;
      if( healthpercent < 66 )
      {
         smoketype = 256 | 2;
         if( Rand( 1, 66 ) < healthpercent )
         {
            smoketype = 256 | 1;
         }
         emit-sfx smoketype from base;
      }
      sleeptime = healthpercent * 50;
      if( sleeptime < 200 )
      {
         sleeptime = 200;
      }
      sleep sleeptime;
   }
}

InitState()
{
   statechg_DesiredState = TRUE;
   statechg_StateChanging = FALSE;
}


Smoke()
{
   while( TRUE )
   {
      if (maeksmoke)    
      {
        emit-sfx 2048 from sfxpoint1;
		sleep 5;
      }
     sleep 5;
   }
}

Smoke2()
{
   while( TRUE )
   {
      if (maeksmoke)    
      {
		emit-sfx 2049 from sfxpoint1;
		sleep 400;
      } 
     sleep 5;
   }
}

Create()
{
   call-script InitState();
   start-script SmokeUnit();
   start-script Smoke();
   start-script Smoke2();
     turn sfxpoint1 to x-axis <-90> now;
}



Activate()
{
   maeksmoke=1;
   turn door1 to x-axis <-90> speed <100>;
   turn door2 to x-axis <90> speed <100>;
   spin wheel around y-axis speed <100.005495>;
   move top to y-axis [8] speed [3];
}

Deactivate()
{
   maeksmoke=0;
   turn door1 to x-axis <0> speed <10>;
   turn door2 to x-axis <0> speed <10>;
   stop-spin wheel around y-axis decelerate <30.000000>;
   move top to y-axis [0] speed [5];
}


Killed(severity, corpsetype)
{
   if( severity <= 25 )
   {
      corpsetype = 1;
      explode base type BITMAPONLY | BITMAP1;
      explode wheel type BITMAPONLY | BITMAP2;
      return (0);
   }
   if( severity <= 50 )
   {
      corpsetype = 2;
      explode base type BITMAPONLY | BITMAP1;
      explode wheel type SHATTER | BITMAP2;
      return (0);
   }
   if( severity <= 99 )
   {
      corpsetype = 3;
      explode base type BITMAPONLY | BITMAP1;
      explode wheel type SHATTER | EXPLODE_ON_HIT | BITMAP2;
      return (0);
   }
   corpsetype = 3;
   explode base type SHATTER | EXPLODE_ON_HIT | BITMAP1;
   explode wheel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
}