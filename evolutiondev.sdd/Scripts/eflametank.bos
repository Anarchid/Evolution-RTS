#define TA // This is a TA script 

#include "sfxtype.h" 
#include "exptype.h" 

piece base, turret, barrel1, firepoint1, dirt, casing; // these are the pieces of the model 

static-var terraintype, bmoving, moving; // these are the variables 

// #define gdscannon 1024+0 // this is a custom explosion generator thinging 
#define f3 1024+1
// Signal definitions 
#define SIG_AIM 2

lua_FlameShot(weapon) //flame effect?
{
  return 0;
}

SmokeUnit(healthpercent, sleeptime, smoketype) // this is a standard smoke point define 
{ 
while( get BUILD_PERCENT_LEFT ) 
{ 
sleep 400; 
} 
while( TRUE ) 
{ 
healthpercent = get HEALTH; 
if( healthpercent < 66 ) 
{ 
smoketype = 256 | 2; 
if( Rand( 1, 66 ) < healthpercent ) 
{ 
smoketype = 256 | 1; 
} 
emit-sfx 1026 from turret; 
} 
sleeptime = healthpercent * 50; 
if( sleeptime < 200 ) 
{ 
sleeptime = 200; 
} 
sleep sleeptime; 
} 
} 

EmitWakes()
{
	while( TRUE )
	{
		if( bMoving )
		{
			emit-sfx 2 from base;
		}
		sleep 300;
	}
}

setSFXoccupy(setSFXoccupy_argument)
{	
terraintype = setSFXoccupy_argument;	

                if(terraintype == 2)
		{
                move base to y-axis [-0.85] speed [50]; 
                set UPRIGHT to 1;	
                }
		else
		{
                move base to y-axis [0.0] speed [50];
                set UPRIGHT to 0;	
                }
                if(terraintype == 4)
		{
                move base to y-axis [0] speed [50]; 
                set UPRIGHT to 0;	
                }
		else
		{
                move base to y-axis [-0.85] speed [50];
                set UPRIGHT to 1;	
                }
}

Thrust()
{
   while( TRUE )
   {
      if (moving)    
      {
              emit-sfx 1024 + 0 from dirt;
                }
        sleep 400;    
   }
}

StartMoving()
{
        moving=1;
}
   
StopMoving()
{   
        moving=0; 
}

Create() // tells it what to do on creation 
{
        start-script Thrust();
        start-script setSFXoccupy(); 
        start-script EmitWakes(); 
        start-script SmokeUnit();
        move casing to z-axis [-2] speed [1000]; 
} 

RestoreAfterDelay() // restore function to turn the turret and so forth back to start 
{ 
sleep 3000; 
turn turret to y-axis <0> speed <60>; 
turn turret to x-axis <0> speed <30>;
move casing to z-axis [-2] speed [1];  
} 

AimPrimary(heading, pitch) // single weapon with 2 fires this tell sit what to do while aiming 
{ 
signal SIG_AIM; 
set-signal-mask SIG_AIM; 
turn turret to y-axis heading speed <255>; 
turn barrel1 to x-axis <0> - pitch speed <150>;  
wait-for-turn turret around y-axis;
wait-for-turn barrel1 around x-axis;  
start-script RestoreAfterDelay(); 
return (1); 
} 

FirePrimary() // what do while firing, fires 1 barrel then the next , and resets 
{ 
move casing to z-axis [2] speed [10];
   sleep 1;
         emit-sfx f3  from firepoint1;
   sleep 1;
         emit-sfx f3  from firepoint1;
   sleep 1;
         emit-sfx f3  from firepoint1;
   sleep 1;
         emit-sfx f3  from firepoint1;
} 

AimFromPrimary(piecenum) // where it aims the weapon from 
{ 
piecenum = barrel1; 
} 

QueryPrimary(piecenum) // where the shot is called from 
{ 
piecenum = firepoint1; 
} 

Shot1()
{
	call-script lua_FlameShot(1);
	return (TRUE);
}

Killed(severity, corpsetype) // how it explodes 
{ 
	corpsetype = 1; 
	explode barrel1 type EXPLODE_ON_HIT;
	explode turret type EXPLODE_ON_HIT;
	explode casing type EXPLODE_ON_HIT;
} 
