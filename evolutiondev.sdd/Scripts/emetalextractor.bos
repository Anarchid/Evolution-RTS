#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, pivotpoint, sfxpoint1, armleft, armright, armfront, armrear;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, statechg_DesiredState, statechg_StateChanging, ball1state, ball2state, ball3state, ball4state, ballstate;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	spin pivotpoint around y-axis speed <50> accelerate <10>;
	ballstate = 1;
	turn armfront to x-axis <60> speed <15>;
	turn armrear to x-axis <-60> speed <15>;
	turn armleft to z-axis <60> speed <15>;
	turn armright to z-axis <-60> speed <15>;
}

Stop()
{
	stop-spin pivotpoint around y-axis decelerate <25>;
	wait-for-turn pivotpoint around y-axis;
	ballstate = 0;
	turn armfront to x-axis <0> speed <50>;
	turn armrear to x-axis <0> speed <50>;
	turn armleft to z-axis <0> speed <50>;
	turn armright to z-axis <0> speed <50>;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}



fx()
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		emit-sfx 2048 from sfxpoint1;
		sleep 5;
	}
}

fx2()
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{

		emit-sfx 2049 from sfxpoint1;
		sleep 400;
	}
}


Create()
{
	start-script fx();
	start-script fx2();
	Static_Var_1 = 0;
	Static_Var_2 = 75;
	Static_Var_3 = 50;
	turn sfxpoint1 to x-axis <-90> now;
	call-script InitState();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}


SetSpeed(Func_Var_1)
{
	Static_Var_1 = Func_Var_1 * 5;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode pivotpoint type BITMAPONLY | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode pivotpoint type SHATTER | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode pivotpoint type SHATTER | EXPLODE_ON_HIT | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode pivotpoint type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode base type SHATTER | EXPLODE_ON_HIT | BITMAP2;
}
