#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, forwarddome, reardome, rearleftwing, frontleftwing, frontrightwing, rearrightwing, dirt;

static-var terraintype, bmoving, moving, shooting_num;

SmokeUnit(healthpercent, sleeptime, smoketype) // this is a standard smoke point define 
{ 
while( get BUILD_PERCENT_LEFT ) 
{ 
sleep 400; 
} 
while( TRUE ) 
{ 
healthpercent = get HEALTH; 
if( healthpercent < 66 ) 
{ 
smoketype = 256 | 2; 
if( Rand( 1, 66 ) < healthpercent ) 
{ 
smoketype = 256 | 1; 
} 
emit-sfx 1026 from forwarddome; 
} 
sleeptime = healthpercent * 50; 
if( sleeptime < 200 ) 
{ 
sleeptime = 200; 
} 
sleep sleeptime; 
} 
} 

EmitWakes()
{
	while( TRUE )
	{
		if( bMoving )
		{
			emit-sfx 2 from base;
		}
		sleep 300;
	}
}

setSFXoccupy(setSFXoccupy_argument)
{	
terraintype = setSFXoccupy_argument;	

                if(terraintype == 2)
		{
                move base to y-axis [-0.85] speed [50]; 
                set UPRIGHT to 1;	
                }
		else
		{
                move base to y-axis [0.0] speed [50];
                set UPRIGHT to 0;	
                }
                if(terraintype == 4)
		{
                move base to y-axis [0] speed [50]; 
                set UPRIGHT to 0;	
                }
		else
		{
                move base to y-axis [-0.85] speed [50];
                set UPRIGHT to 1;	
                }
}

Thrust()
{
   while( TRUE )
   {
      if (moving)    
      {
              emit-sfx 1024 + 0 from dirt;
                }
        sleep 400;    
   }
}

StartMoving()
{
        moving=1;
}
   
StopMoving()
{   
        moving=0; 
}

Create() // tells it what to do on creation 
{
        start-script Thrust();
        start-script setSFXoccupy(); 
        start-script EmitWakes(); 
        start-script SmokeUnit(); 
} 

Killed(severity, corpsetype) // how it explodes 
{ 
	corpsetype = 1; 
	explode forwarddome type EXPLODE_ON_HIT;
	explode reardome type EXPLODE_ON_HIT;
	explode rearleftwing type EXPLODE_ON_HIT;
	explode rearrightwing type EXPLODE_ON_HIT;
	explode frontleftwing type EXPLODE_ON_HIT;
	explode frontrightwing type EXPLODE_ON_HIT;
} 
