#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  hull, turret, barrel1, firepoint1;

static-var  Static_Var_1, Static_Var_2, Static_Var_3;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from turret;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

EmitWakes()
{
	while( TRUE )
	{
		if( Static_Var_3 )
		{
			emit-sfx 2 from hull;
		}
		sleep 300;
	}
}

setSFXoccupy(Func_Var_1)
{
	Static_Var_2 = Func_Var_1;
	if( Static_Var_2 == 2 )
	{
		move hull to y-axis [-0.850000] speed [50.000000];
		set UNKNOWN_UNIT_VALUE(79) to 1;
	}
	else
	{
		move hull to y-axis [0.000000] speed [50.000000];
		set UNKNOWN_UNIT_VALUE(79) to 0;
	}
	if( Static_Var_2 == 4 )
	{
		move hull to y-axis [0.000000] speed [50.000000];
		set UNKNOWN_UNIT_VALUE(79) to 0;
	}
	else
	{
		move hull to y-axis [-0.850000] speed [50.000000];
		set UNKNOWN_UNIT_VALUE(79) to 1;
	}
}

Create()
{
	start-script setSFXoccupy();
	start-script EmitWakes();
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 3000;
	turn turret to y-axis <0.000000> speed <60.000000>;
}

AimWeapon1(Func_Var_1, Func_Var_2)
{
	while( Static_Var_1 >= 1 )
	{
		sleep 100;
	}
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis Func_Var_1 speed <225.000000>;
	wait-for-turn turret around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	if( Static_Var_1 == 0 )
	{
		emit-sfx 1024 + 0 from firepoint1;
		move barrel1 to z-axis [-3.000000] speed [500.000000];
		sleep 75;
		move barrel1 to z-axis [0.000000] speed [1.000000];
	}
	++Static_Var_1;
	if( Static_Var_1 >= 1 )
	{
		Static_Var_1 = 0;
	}
}

AimFromWeapon1(Func_Var_1)
{
	Func_Var_1 = 1;
}

QueryWeapon1(Func_Var_1)
{
	if( Static_Var_1 == 0 )
	{
		Func_Var_1 = 3;
	}
}

SweetSpot(piecenum)
{
	piecenum = hull;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode hull type BITMAPONLY | BITMAP1;
		explode barrel1 type BITMAPONLY | BITMAP1;
		explode turret type BITMAPONLY | BITMAP4;
		return (0);
	}
	if( severity <= 80 )
	{
		corpsetype = 2;
		explode hull type BITMAPONLY | BITMAP4;
		explode barrel1 type FALL | BITMAP1;
		explode turret type SHATTER | BITMAP4;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode hull type BITMAPONLY | BITMAP1;
		explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode turret type SHATTER | BITMAP4;
		return (0);
	}
	corpsetype = 3;
	explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode turret type SHATTER | EXPLODE_ON_HIT | BITMAP4;
}
