#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, fan1, fan2, firepoint1;

static-var  Static_Var_1, gun_1, Static_Var_3, Static_Var_5, statechg_DesiredState, statechg_StateChanging, bMoving, terraintype;

#define SIG_AIM 2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

fx()
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		emit-sfx 1024 from base;
		sleep 200;
	}
}

fx2()
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		emit-sfx 2049 from base;
		sleep 10;
	}
}

AimWeapon1(Func_Var_1, Func_Var_2)
{
	return (1);
}

FireWeapon1()
{
}

AimFromWeapon1(Func_Var_1)
{
	Func_Var_1 = firepoint1;
}

QueryWeapon1(Func_Var_1)
{
	Func_Var_1 = firepoint1;
}


Go()
{
        Static_Var_3 = 1;
	if( Static_Var_3 )
	{

	}
	sleep 15;
	set INBUILDSTANCE to 1;
}

Stop()
{
        set INBUILDSTANCE to 0;
	if( Static_Var_3 )
	{

	}
	sleep 20;
	Static_Var_3 = 0;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}


Create()
{
	call-script InitState();
	spin fan1 around y-axis speed <1000.005495>;
	spin fan2 around y-axis speed <1000.005495>;
	start-script SmokeUnit();
}


StartBuilding(Func_Var_1)
{
	Static_Var_1 = Func_Var_1;
	start-script RequestState(0);
}

StopBuilding()
{
	start-script RequestState(1);
}

QueryNanoPiece(piecenum)
{
	if( Static_Var_5 == 0 )
	{
		piecenum = base;
		Static_Var_5 = 1;		
		return (0);
	}
}

TargetHeading(Func_Var_1)
{
	Static_Var_1 = 0 - Func_Var_1;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type SHATTER | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type SHATTER | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
}
