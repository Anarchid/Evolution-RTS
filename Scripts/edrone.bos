#define TA        // This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece base, firepoint1, wingsfront, engine1, engine2, wingsrear, engine3;

static-var  moving, flames;

#define jethtrail 1024+0

// Signal definitions
#define SIG_AIM 2

SmokeUnit(healthpercent, sleeptime, smoketype)
{
   while( get BUILD_PERCENT_LEFT )
   {
      sleep 400;
   }
   while( TRUE )
   {
      healthpercent = get HEALTH;
      if( healthpercent < 66 )
      {
         smoketype = 256 | 2;
         if( Rand( 1, 66 ) < healthpercent )
         {
            smoketype = 256 | 1;
         }
         emit-sfx 1025 from base;
      }
      sleeptime = healthpercent * 50;
      if( sleeptime < 200 )
      {
         sleeptime = 200;
      }
      sleep sleeptime;
   }
}


Thrust()
{
   while( TRUE )
   {
      if (moving)    
      {
              emit-sfx jethtrail from engine1;
              emit-sfx jethtrail from engine2;
              emit-sfx jethtrail from engine3;
                }
        sleep 5;    
   }
}

StartMoving()
{
        moving=1;
}
   
StopMoving()
{   
        moving=0; 
}

MoveRate0()
{
	flames=0;
 	turn wingsfront to x-axis <-90.000000> speed <150.000000>;
 	turn wingsrear to x-axis <-90.000000> speed <150.000000>;
}
MoveRate1()
{
	flames=0;
 	turn wingsfront to x-axis <-70.005495> speed <150.000000>;
  	turn wingsrear to x-axis <-70.005495> speed <150.000000>;

}
MoveRate2()
{
	flames=1;
 	turn wingsfront to x-axis <0.000000> speed <150.000000>;
 	turn wingsrear to x-axis <0.000000> speed <150.000000>;
}

AimWeapon1(heading, pitch) // single weapon with 2 fires this tell sit what to do while aiming 
{
signal SIG_AIM; 
set-signal-mask SIG_AIM;
return (1); 
} 

FireWeapon1() // what do while firing, fires 1 barrel then the next , and resets 
{ 
} 

AimFromWeapon1(piecenum) // where it aims the weapon from 
{ 
piecenum = base; 
} 

QueryWeapon1(piecenum) // where the shot is called from 
{ 
piecenum = firepoint1; 
} 


Create()
   {
//      start-script Thrust();
//         turn engine1 to y-axis <180> now;
//         turn engine2 to y-axis <180> now;
//         turn engine3 to y-axis <180> now;
        start-script SmokeUnit();
   }

Killed(severity, corpsetype) // how it explodes 
{ 
	corpsetype = 3; 
	explode base type EXPLODE_ON_HIT;
	explode wingsfront type EXPLODE_ON_HIT;
	explode engine1 type EXPLODE_ON_HIT;
	explode engine2 type EXPLODE_ON_HIT;
	explode wingsrear type EXPLODE_ON_HIT;
	explode engine3 type EXPLODE_ON_HIT;
} 