#define TA        // This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, barrels, firepoint1, firepoint2, firepoint3, firepoint4, firepoint5, firepoint6, firepoint7, firepoint8, firepoint9, firepoint10, firepoint11, firepoint12, firepoint13, firepoint14, firepoint15, firepoint16, firepoint17, firepoint18, firepoint19, firepoint20, firepoint21, firepoint22, firepoint23, firepoint24, firepoint25, firepoint26, firepoint27, firepoint28, firepoint29, firepoint30, firepoint31, firepoint32, exhaustpoint1, exhaustpoint2, exhaustpoint3, exhaustpoint4, exhaustpoint5, exhaustpoint6, exhaustpoint7, exhaustpoint8, exhaustpoint9, exhaustpoint10, exhaustpoint11, exhaustpoint12, exhaustpoint13, exhaustpoint14, exhaustpoint15, exhaustpoint16, exhaustpoint17, exhaustpoint18, exhaustpoint19, exhaustpoint20, exhaustpoint21, exhaustpoint22, exhaustpoint23, exhaustpoint24, exhaustpoint25, exhaustpoint26, exhaustpoint27, exhaustpoint28, exhaustpoint29, exhaustpoint30, exhaustpoint31, exhaustpoint32;

static-var  moving, gun_1, missilefire, missile, bmoving, terraintype;

// Signal definitions
#define SIG_AIM            2
#define SIG_AIM_2       4
#define SIG_AIM_3       8

#define rocketlaunchback 1024+0

#define SFACTOR -2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
   while( get BUILD_PERCENT_LEFT )
   {
      sleep 400;
   }
   while( TRUE )
   {
      healthpercent = get HEALTH;
      if( healthpercent < 66 )
      {
         smoketype = 256 | 2;
         if( Rand( 1, 66 ) < healthpercent )
         {
            smoketype = 256 | 1;
         }
         emit-sfx smoketype from base;
      }
      sleeptime = healthpercent * 50;
      if( sleeptime < 200 )
      {
         sleeptime = 200;
      }
      sleep sleeptime;
   }
}



EmitWakes()
{
   while( TRUE )
   {
      if( bMoving )
      {
         emit-sfx 2 from base;
      }
      sleep 300;
   }
}

setSFXoccupy(setSFXoccupy_argument)
{
terraintype = setSFXoccupy_argument;

                if(terraintype == 2)
      {
                move base to y-axis [-0.85] speed [50];
                set UPRIGHT to 1;
                }
      else
      {
                move base to y-axis [0.0] speed [50];
                set UPRIGHT to 0;
                }
                if(terraintype == 4)
      {
                move base to y-axis [0] speed [50];
                set UPRIGHT to 0;
                }
      else
      {
                move base to y-axis [-0.85] speed [50];
                set UPRIGHT to 1;
                }
}

Create() // tells it what to do on creation
{
        start-script setSFXoccupy();

        gun_1 = 0;
        missile = 0;
        moving = FALSE;
        start-script SmokeUnit();
}

SlowReload()
{
   if( missilefire > 0 AND missilefire < 32 )
   {
      while( missilefire > 0 AND missile == 0 )
      {
         --missilefire;
         sleep 666;
      }
   }
}

Reload()
{
   sleep 18000;
   gun_1 = 0;
}

RestoreAfterDelay()
{
   sleep 3000;
   turn barrels to y-axis <0> speed <60>;
   turn barrels to x-axis <0> speed <30>;
   if( gun_1 == 0 )
   {
      start-script SlowReload();
   }
   missile = 0;
}

//Weapon1

AimWeapon1(heading, pitch)
{
   signal SIG_AIM;
   set-signal-mask SIG_AIM;
   turn barrels to y-axis heading speed <225>;
   turn barrels to x-axis <0> - pitch speed <150>;
   wait-for-turn barrels around y-axis;
   wait-for-turn barrels around x-axis;
   missile = 1;
        while( gun_1 == 1 )
   {
      sleep 100;
   }
        while( moving )
   {
      sleep 100;
   }
        start-script RestoreAfterDelay();
   return (1);
}

FireWeapon1()
{
      if( missilefire >= 0 AND missilefire < 32 )
      {
                if( missilefire == 0 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint1;
         sleep 100;
      }
      if( missilefire == 1 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint2;
         sleep 100;

      }
      if( missilefire == 2 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint3;
         sleep 100;
      }
      if( missilefire == 3 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint4;
         sleep 100;
      }
      if( missilefire == 4 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint5;
         sleep 100;
      }
      if( missilefire == 5 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint6;
         sleep 100;
      }
      if( missilefire == 6 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint7;
         sleep 100;
      }
      if( missilefire == 7 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint8;
         sleep 100;
      }
      if( missilefire == 8 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint9;
         sleep 100;
      }
      if( missilefire == 9 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint10;
         sleep 100;
      }
                if( missilefire == 10 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint11;
         sleep 100;
      }
                if( missilefire == 11 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint12;
         sleep 100;
      }
                if( missilefire == 12 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint13;
         sleep 100;
      }
                if( missilefire == 13 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint14;
         sleep 100;
      }
                if( missilefire == 14 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint15;
         sleep 100;
      }
                if( missilefire == 15 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint16;
         sleep 100;
      }
                if( missilefire == 16 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint17;
         sleep 100;
      }
      if( missilefire == 17 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint18;
         sleep 100;
      }
      if( missilefire == 18 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint19;
         sleep 100;
      }
      if( missilefire == 19 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint20;
         sleep 100;
      }
      if( missilefire == 20 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint21;
         sleep 100;
      }
      if( missilefire == 21 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint22;
         sleep 100;
      }
      if( missilefire == 22 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint23;
         sleep 100;
      }
      if( missilefire == 23 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint24;
         sleep 100;
      }
      if( missilefire == 24 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint25;
         sleep 100;
      }
      if( missilefire == 25 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint26;
         sleep 100;
      }
                if( missilefire == 26 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint27;
         sleep 100;
      }
                if( missilefire == 27 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint28;
         sleep 100;
      }
                if( missilefire == 28 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint29;
         sleep 100;
      }
                if( missilefire == 29 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint30;
         sleep 100;
      }
                if( missilefire == 30 )
      {

                        emit-sfx rocketlaunchback from exhaustpoint31;
         sleep 100;
      }
                if( missilefire == 31 )
      {
         gun_1 = 1;
         start-script Reload();
                        emit-sfx rocketlaunchback from exhaustpoint32;
         sleep 100;
      }
        }
        ++missilefire;
   if( missilefire >= 32 )
   {
      missilefire = 0;
   }
}

AimFromWeapon1(piecenum)
{
   piecenum = barrels;
}


QueryWeapon1(piecenum)
{
    if( missilefire >= 0 AND missilefire < 32 )
      {
        if( missilefire == 0 )
   {
      piecenum = firepoint1;
   }
   if( missilefire == 1 )
   {
      piecenum = firepoint2;
   }
   if( missilefire == 2 )
   {
      piecenum = firepoint3;
   }
   if( missilefire == 3 )
   {
      piecenum = firepoint4;
   }
   if( missilefire == 4 )
   {
      piecenum = firepoint5;
   }
   if( missilefire == 5 )
   {
      piecenum = firepoint6;
   }
   if( missilefire == 6 )
   {
      piecenum = firepoint7;
   }
   if( missilefire == 7 )
   {
      piecenum = firepoint8;
   }
   if( missilefire == 8 )
   {
      piecenum = firepoint9;
   }
   if( missilefire == 9 )
   {
      piecenum = firepoint10;
   }
   if( missilefire == 10 )
   {
      piecenum = firepoint11;
   }
   if( missilefire == 11 )
   {
      piecenum = firepoint12;
   }
   if( missilefire == 12 )
   {
      piecenum = firepoint13;
   }
   if( missilefire == 13 )
   {
      piecenum = firepoint14;
   }
   if( missilefire == 14 )
   {
      piecenum = firepoint15;
   }
   if( missilefire == 15 )
   {
      piecenum = firepoint16;
   }
        if( missilefire == 16 )
   {
      piecenum = firepoint17;
   }
   if( missilefire == 17 )
   {
      piecenum = firepoint18;
   }
   if( missilefire == 18 )
   {
      piecenum = firepoint19;
   }
   if( missilefire == 19 )
   {
      piecenum = firepoint20;
   }
   if( missilefire == 20 )
   {
      piecenum = firepoint21;
   }
   if( missilefire == 21 )
   {
      piecenum = firepoint22;
   }
   if( missilefire == 22 )
   {
      piecenum = firepoint23;
   }
   if( missilefire == 23 )
   {
      piecenum = firepoint24;
   }
   if( missilefire == 24 )
   {
      piecenum = firepoint25;
   }
   if( missilefire == 25 )
   {
      piecenum = firepoint26;
   }
   if( missilefire == 26 )
   {
      piecenum = firepoint27;
   }
   if( missilefire == 27 )
   {
      piecenum = firepoint28;
   }
   if( missilefire == 28 )
   {
      piecenum = firepoint29;
   }
   if( missilefire == 29 )
   {
      piecenum = firepoint30;
   }
   if( missilefire == 30 )
   {
      piecenum = firepoint31;
   }
   if( missilefire == 31 )
   {
      piecenum = firepoint32;
   }
     }
}

StartMoving()
{
   moving = TRUE;
}

StopMoving()
{
   moving = FALSE;
}


Killed(severity, corpsetype)
{
   if( severity <= 25 )
   {
      corpsetype = 1;
      explode base type BITMAPONLY | BITMAP1;
      explode barrels type BITMAPONLY | BITMAP3;
      return (0);
   }
   if( severity <= 50 )
   {
      corpsetype = 2;
      explode base type FALL | BITMAP3;
      explode barrels type BITMAPONLY | BITMAP3;
      return (0);
   }
   if( severity <= 99 )
   {
      corpsetype = 3;
      explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
      explode barrels type BITMAPONLY | BITMAP3;
      return (0);
   }
   corpsetype = 3;
   explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
   explode barrels type BITMAPONLY | BITMAP3;
}
