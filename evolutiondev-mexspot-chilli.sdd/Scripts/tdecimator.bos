#define TA // This is a TA script 

#include "sfxtype.h" 
#include "exptype.h" 

piece base, turret, barrel1, firepoint1; // these are the pieces of the model 


#define SIG_AIM 2 // this is a aim define 
#define SIG_AIM_2  4 // this is a aim define 


SmokeUnit(healthpercent, sleeptime, smoketype) // this is a standard smoke point define 
{ 
while( get BUILD_PERCENT_LEFT ) 
{ 
sleep 400; 
} 
while( TRUE ) 
{ 
healthpercent = get HEALTH; 
if( healthpercent < 66 ) 
{ 
smoketype = 256 | 2; 
if( Rand( 1, 66 ) < healthpercent ) 
{ 
smoketype = 256 | 1; 
} 
emit-sfx smoketype from base; 
} 
sleeptime = healthpercent * 50; 
if( sleeptime < 200 ) 
{ 
sleeptime = 200; 
} 
sleep sleeptime; 
} 
} 



Create() // tells it what to do on creation 
{

start-script SmokeUnit(); 
} 

RestoreAfterDelay() // restore function to turn the turret and so forth back to start 
{ 
sleep 10000; 
turn turret to y-axis <0> speed <30>;
turn barrel1 to x-axis <0> speed <10>;  
} 

AimWeapon1(heading, pitch) // single weapon with 2 fires this tell sit what to do while aiming 
{ 
signal SIG_AIM; 
set-signal-mask SIG_AIM; 
turn turret to y-axis heading speed <30>;
turn barrel1 to x-axis <0> - pitch speed <10>; 
wait-for-turn turret around y-axis;
wait-for-turn barrel1 around x-axis;  
start-script RestoreAfterDelay(); 
return (1); 
} 

FireWeapon1() // what do while firing, fires 1 barrel then the next , and resets 
{ 
} 

AimFromWeapon1(piecenum) // where it aims the weapon from 
{ 
piecenum = barrel1; 
} 

QueryWeapon1(piecenum) // where the shot is called from 
{ 
piecenum = firepoint1; 
} 

AimWeapon2(heading, pitch) // single weapon with 2 fires this tell sit what to do while aiming 
{ 
signal SIG_AIM_2; 
set-signal-mask SIG_AIM_2; 
turn turret to y-axis heading speed <30>;
turn barrel1 to x-axis <0> - pitch speed <10>; 
wait-for-turn turret around y-axis;
wait-for-turn barrel1 around x-axis;  
start-script RestoreAfterDelay(); 
return (1); 
} 

FireWeapon2() // what do while firing, fires 1 barrel then the next , and resets 
{ 
} 

AimFromWeapon2(piecenum) // where it aims the weapon from 
{ 
piecenum = barrel1; 
} 

QueryWeapon2(piecenum) // where the shot is called from 
{ 
piecenum = firepoint1; 
} 

Killed(severity, corpsetype) // how it explodes 
{ 
if( severity <= 25 ) 
{ 
corpsetype = 1; 
explode base type BITMAPONLY | BITMAP1; 
explode barrel1 type BITMAPONLY | BITMAP1;  
explode turret type BITMAPONLY | BITMAP4; 
return (0); 
} 
if( severity <= 80 ) 
{ 
corpsetype = 2; 
explode base type BITMAPONLY | BITMAP4; 
explode barrel1 type FALL | BITMAP1; 
explode turret type SHATTER | BITMAP4; 
return (0); 
} 
if( severity <= 99 ) 
{ 
corpsetype = 3; 
explode base type BITMAPONLY | BITMAP1; 
explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1; 
explode turret type SHATTER | BITMAP4; 
return (0); 
} 
corpsetype = 3; 
explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1; 
explode turret type SHATTER | EXPLODE_ON_HIT | BITMAP4; 
} 
